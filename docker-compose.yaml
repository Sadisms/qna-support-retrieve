version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: support
      POSTGRES_PASSWORD: support_pass
      POSTGRES_DB: support_ai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant:v1.9.0
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334" # gRPC
    volumes:
      - qdrant_data:/qdrant/storage

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    depends_on:
      - postgres
      - qdrant
      - ollama
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://support:support_pass@postgres:5432/support_ai
      OLLAMA_URL: http://ollama:11434
      OLLAMA_MODEL: intfloat/e5-base-v2
      QDRANT_URL: http://qdrant:6333
      QDRANT_COLLECTION_NAME: support_qa
    volumes:
      - ./app:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
  qdrant_data:
  ollama_models:
